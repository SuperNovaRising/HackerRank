#include <cmath>
#include <cstdio>
#include <vector>
#include <iostream>
#include <algorithm>
#include <queue>
#include <utility>
using namespace std;

pair<int, int> make_pair(int x, int y){
    return pair<int, int> (x, y);
}

int get_amount(pair<int, int> p){
    return get<0>(p);
}

int get_distance(pair<int, int> p){
    return get<1>(p);
}

void print_queue(queue<pair<int, int> >q) {
    int count = q.size();
    auto p = &q.front();
    while (count > 0){
        //cout << "<" << get_amount(*p) << "," << get_distance(*p) << ">" << " ";
        p++;
        count--;
    }
    //cout << endl;
}

int main() {
    /* Enter your code here. Read input from STDIN. Print output to STDOUT */   
    int N, x, d, ind = 0, curr = 0;
    long long total_amount = 0;
    queue<pair<int, int> > Q1;
    cin >> N;
    
    for (int i = 0; i < N; i++){
        cin >> x >> d;
        Q1.push(make_pair(x, d));
    }
    
    while (curr < Q1.size()){
        int amount = get_amount(Q1.front());
        int distance = get_distance(Q1.front());
        total_amount += (amount - distance);
        pair<int, int> tmp = make_pair(amount, distance);
        Q1.pop();
        Q1.push(tmp);
        
        if (total_amount < 0){
            ind = curr + 1;
            total_amount = 0;
        }
        curr++;
    }
        
    cout << ind << endl;
    return 0;
}